version: '3.3'

services:
  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:2
    environment:
      - DEFAULT_PROVIDER=oidc
      - PROVIDERS_OIDC_ISSUER_URL=https://${KEYCLOAK_DOMAIN?Variable not set}/auth/realms/master
      - PROVIDERS_OIDC_CLIENT_ID=stapp
      - PROVIDERS_OIDC_CLIENT_SECRET=153c5c33-b5b5-444f-a0f4-45ed589c80dd
      - SECRET=change_to_a_random_string
      # INSECURE_COOKIE is required if not using a https entrypoint
      - INSECURE_COOKIE=true
      - LOG_LEVEL=debug
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
           - node.role==manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public" # put it in the same network as traefik
        - "traefik.constraint-label=traefik-public" # assign the same label as traefik so it can be discovered
        - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
        - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"
        - "traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181"

        - "traefik.http.routers.forward-auth.rule=Host(`auth.app.databentobox.com`)"
        - "traefik.http.routers.forward-auth.service=traefik-forward-auth"
  stapp:
    image: presstofan/streamlit-demo
    depends_on:
      - traefik-forward-auth
    ports:
      - 8501
    networks:
      - traefik-public
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      # placement:
      #   constraints:
      #     - node.role==manager
      labels:
        - "traefik.enable=true" # enable traefik
        - "traefik.docker.network=traefik-public" # put it in the same network as traefik
        - "traefik.constraint-label=traefik-public" # assign the same label as traefik so it can be discovered
        - "traefik.http.routers.stapp.rule=Host(`${APP_DOMAIN?Variable not set}`)"
        - "traefik.http.routers.stapp.entrypoints=http"
        # redirect HTTP to HTTPS and add SSL certificate
        - "traefik.http.middlewares.stapp.redirectscheme.scheme=https" # redirect traffic to https
        - "traefik.http.middlewares.stapp.redirectscheme.permanent=true" # redirect traffic to https
        - "traefik.http.routers.stapp-secured.rule=Host(`${APP_DOMAIN?Variable not set}`)" # listen to port 443 for request to APP_DOMAIN (use together with the line below)
        - "traefik.http.routers.stapp-secured.entrypoints=https"
        - "traefik.http.routers.stapp-secured.tls.certresolver=le" # use the Let's Encrypt certificate we set up earlier


        - "traefik.http.routers.stapp-secured.service=stapp-secured"
        - "traefik.http.routers.stapp-secured.middlewares=stapp@docker"
        - "traefik.http.middlewares.stapp.forwardauth.address=http://traefik-forward-auth:4181"
        - "traefik.http.middlewares.stapp.forwardauth.authresponseheaders=X-Forwarded-User"
        - "traefik.http.services.stapp.loadbalancer.server.port=8501"

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  traefik-public:
    external: true